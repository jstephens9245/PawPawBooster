{"version":3,"sources":["webpack:///./client/containers/EventContainer.js?099f"],"names":["EventContainer","props","console","log","state","date","time","title","description","dirty","wobbleError","submitForm","bind","handleInput","wobbler","nextProps","loggedInUser","router","push","e","preventDefault","createEvent","then","result","message","setState","target","name","value","setTimeout","warning","type","mapStateToProps","events","event","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;;;;;;;;;KAGaA,c,WAAAA,c;;;AACX,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iIACXA,KADW;;AAEjBC,aAAQC,GAAR,CAAYF,KAAZ;;AAEA,WAAKG,KAAL,GAAa;AACXC,aAAQ,EADG;AAEXC,aAAQ,EAFG;AAGXC,cAAa,EAHF;AAIXC,oBAAgB,EAJL;AAKXC,cAAa,KALF;AAMXC,oBAAa;AANF,MAAb;;AASA,WAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AACA,WAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AACA,WAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;AAfiB;AAgBlB;;;;+CAEyBX,K,EAAOc,S,EAAW;AAC1C,WAAI,CAAC,uBAAQd,MAAMe,YAAd,CAAL,EAAkC;AAChC,cAAKf,KAAL,CAAWgB,MAAX,CAAkBC,IAAlB,CAAuB,SAAvB;AACD;AACF;;;gCAEUC,C,EAAG;AAAA;;AACZA,SAAEC,cAAF;AACA,YAAKnB,KAAL,CAAWoB,WAAX,CAAuB,KAAKjB,KAAL,CAAWC,IAAlC,EACA,KAAKD,KAAL,CAAWE,IADX,EACiB,KAAKF,KAAL,CAAWG,KAD5B,EACmC,KAAKH,KAAL,CAAWI,WAD9C,EAEGc,IAFH,CAEQ,kBAAU;AACd,aAAIC,UAAUA,OAAOC,OAAP,KAAmB,qCAAjC,EAAwE;AACtE,kBAAKC,QAAL,CAAc,EAAChB,OAAO,IAAR,EAAd;AACA,kBAAKK,OAAL;AACD;AACF,QAPH;AAQD;;;iCAEWK,C,EAAG;AACb,YAAKM,QAAL,qBAAgBN,EAAEO,MAAF,CAASC,IAAzB,EAAgCR,EAAEO,MAAF,CAASE,KAAzC;AACD;;;+BACS;AAAA;;AACR,YAAKH,QAAL,CAAc,EAACf,aAAa,uBAAd,EAAd;;AAEAmB,kBAAW,YAAM;AACf,gBAAKJ,QAAL,CAAc,EAACf,aAAa,EAAd,EAAd;AACD,QAFD,EAEG,IAFH;AAGD;;;8BAEQ;AACP,WAAMD,QAAQ,KAAKL,KAAL,CAAWK,KAAzB;AACA,WAAIqB,UAAU,EAAd;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cACE;AAAA;AAAA;AACA,2BAAe,SADf;AAEA,6BAAkB,IAFlB;AAGA,oCAAyB,GAHzB;AAIA,mCAAwB,GAJxB;AAKA,mCAAwB,GALxB;AAME;AAAA;AAAA,aAAK,+BAA6B,KAAK1B,KAAL,CAAW2B,IAAxC,SAAgD,KAAK3B,KAAL,CAAWM,WAAhE;AACI,6DAAQ,YAAY,KAAKC,UAAzB;AACQ,0BAAa,KAAKE,WAD1B;AAEQ,sBAASiB,OAFjB;AAGQ,sBAAS,KAAKhB,OAHtB;AAIQ,0BAAa,KAAKV,KAAL,CAAWM,WAJhC;AADJ;AANF,QADF;AAgBD;;;;;;AAGH,KAAMsB,kBAAkB,SAAlBA,eAAkB,CAAC5B,KAAD;AAAA,UAAY;AAClC6B,aAAQ7B,MAAM8B,KAAN,CAAYD;AADc,IAAZ;AAAA,EAAxB;;AAIA,KAAME,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD;AAAA,UAAe;AACxCf,kBAAa,qBAAChB,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,WAApB;AAAA,cACb4B,SAAS,wBAAY/B,IAAZ,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,WAA/B,CAAT,CADa;AAAA;AAD2B,IAAf;AAAA,EAA3B;;mBAKe,yBAAQwB,eAAR,EAAyBG,kBAAzB,EAA6CnC,cAA7C,C","file":"0.9446b75ce7d554731676.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport Events from '../components/Events';\nimport {createEvent, deleteEvent} from '../actions/event';\n\nimport isEmpty from 'lodash/isEmpty';\nimport ReactTransitionGroup from 'react-addons-css-transition-group';\n\n\nexport class EventContainer extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    this.state = {\n      date  : '',\n      time  : '',\n      title      : '',\n      description   : '',\n      dirty      : false,\n      wobbleError: ''\n    };\n\n    this.submitForm = this.submitForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.wobbler = this.wobbler.bind(this);\n  }\n\n  componentWillReceiveProps(props, nextProps) {\n    if (!isEmpty(props.loggedInUser)) {\n      this.props.router.push('/boards');\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    this.props.createEvent(this.state.date,\n    this.state.time, this.state.title, this.state.description)\n      .then(result => {\n        if (result && result.message === 'Request failed with status code 409') {\n          this.setState({dirty: true});\n          this.wobbler();\n        }\n      });\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n  wobbler() {\n    this.setState({wobbleError: 'hvr-wobble-horizontal'});\n\n    setTimeout(() => {\n      this.setState({wobbleError: ''});\n    }, 1000);\n  }\n\n  render() {\n    const dirty = this.state.dirty;\n    let warning = '';\n\n    // if (dirty && this.state.type === 'login') {\n    //   warning = 'Password or Email is Invalid';\n    // } else if (dirty && this.state.type === 'signup') {\n    //   warning = 'Username or Email is Unavailable';\n    // }\n\n    return (\n      <ReactTransitionGroup\n      transitionName=\"slideIn\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnterTimeout={500}\n      transitionLeaveTimeout={500}>\n        <div className={`form-container ${this.state.type} ${this.state.wobbleError}`} >\n            <Events submitForm={this.submitForm}\n                    handleInput={this.handleInput}\n                    warning={warning}\n                    wobbler={this.wobbler}\n                    wobbleError={this.state.wobbleError}/>\n        </div>\n    </ReactTransitionGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  events: state.event.events,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createEvent: (date, time, title, description) =>\n  dispatch(createEvent(date, time, title, description)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/EventContainer.js\n **/"],"sourceRoot":""}