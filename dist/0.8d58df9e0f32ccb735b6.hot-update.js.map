{"version":3,"sources":["webpack:///./client/containers/EventContainer.js?099f"],"names":["EventContainer","props","state","date","time","title","description","dirty","wobbleError","submitForm","bind","handleInput","wobbler","nextProps","loggedInUser","router","push","e","preventDefault","createEvent","firstName","lastName","email","username","password","then","result","message","setState","target","name","value","setTimeout","warning","type","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"0.8d58df9e0f32ccb735b6.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport Events from '../components/Events';\n\nimport isEmpty from 'lodash/isEmpty';\nimport ReactTransitionGroup from 'react-addons-css-transition-group';\n\n\nexport class EventContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date  : '',\n      time  : '',\n      title      : '',\n      description   : '',\n      dirty      : false,\n      wobbleError: ''\n    };\n\n    this.submitForm = this.submitForm.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.wobbler = this.wobbler.bind(this);\n  }\n\n  componentWillReceiveProps(props, nextProps) {\n    if (!isEmpty(props.loggedInUser)) {\n      this.props.router.push('/boards');\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    this.props.createEvent(this.state.firstName,\n    this.state.lastName, this.state.email, this.state.username, this.state.password)\n      .then(result => {\n        if (result && result.message === 'Request failed with status code 409') {\n          this.setState({dirty: true});\n          this.wobbler();\n        }\n      });\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n  wobbler() {\n    this.setState({wobbleError: 'hvr-wobble-horizontal'});\n\n    setTimeout(() => {\n      this.setState({wobbleError: ''});\n    }, 1000);\n  }\n\n  render() {\n    const dirty = this.state.dirty;\n    let warning = '';\n\n    // if (dirty && this.state.type === 'login') {\n    //   warning = 'Password or Email is Invalid';\n    // } else if (dirty && this.state.type === 'signup') {\n    //   warning = 'Username or Email is Unavailable';\n    // }\n\n    return (\n      <ReactTransitionGroup\n      transitionName=\"slideIn\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnterTimeout={500}\n      transitionLeaveTimeout={500}>\n        <div className={`form-container ${this.state.type} ${this.state.wobbleError}`} >\n            <Events submitForm={this.submitForm}\n                    handleInput={this.handleInput}\n                    warning={warning}\n                    wobbler={this.wobbler}\n                    wobbleError={this.state.wobbleError}/>\n        </div>\n    </ReactTransitionGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // loggedInUser: state.userReducer.loggedInUser\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createEvent: (firstName, lastName, email, username, password) =>\n  dispatch(createEvent(firstName, lastName, email, username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventContainer);\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/containers/EventContainer.js\n **/"],"sourceRoot":""}