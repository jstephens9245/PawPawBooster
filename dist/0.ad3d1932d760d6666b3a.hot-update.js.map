{"version":3,"sources":["webpack:///./client/reducers/eventReducer.js?0e89"],"names":["state","initialState","action","newState","Object","assign","type","events","event"],"mappings":";;;;;;;;;;;;;;mBAKe,YAAuC;AAAA,OAA9BA,KAA8B,uEAAtBC,YAAsB;AAAA,OAARC,MAAQ;;AACpD,OAAMC,WAAWC,OAAOC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,CAAjB;;AAEA,WAAQE,OAAOI,IAAf;;AAEA;AACEH,gBAASI,MAAT,gCAAuBJ,SAASI,MAAhC,sBAA2CL,OAAOK,MAAlD;AACA;AACF;AACEJ,gBAASI,MAAT,gCAAuBJ,SAASI,MAAhC,IAAwC,CAACL,OAAOM,KAAR,CAAxC;AACA;AACF;AACE,cAAOR,KAAP;;AATF;;AAaA,UAAOG,QAAP;AACD,E;;AAtBD;;;;AAGA,KAAMF,eAAe,EAAEM,QAAQ,EAAV,EAArB,C","file":"0.ad3d1932d760d6666b3a.hot-update.js","sourcesContent":["import {RECEIVE_EVENTS, ADD_NEW_EVENT} from '../constants';\n\n\nconst initialState = { events: [] };\n\nexport default function(state = initialState, action) {\n  const newState = Object.assign({}, state);\n\n  switch (action.type) {\n\n  case RECEIVE_EVENTS:\n    newState.events = [ ...newState.events, ...action.events ];\n    break;\n  case ADD_NEW_EVENT:\n    newState.events = [ ...newState.events, [action.event] ];\n    break;\n  default:\n    return state;\n\n  }\n\n  return newState;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/reducers/eventReducer.js\n **/"],"sourceRoot":""}